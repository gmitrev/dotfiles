set-option -g prefix `

unbind-key C-b
bind-key C-a last-window
bind-key 0 last-window
bind-key ` send-prefix
bind-key a send-prefix

# we might need ` at some point, allow switching
# we can also send the prefix char with `-a
bind-key F11 set-option -g prefix C-a
bind-key F12 set-option -g prefix `

set -g default-shell /bin/zsh
set-option -g default-terminal "gnome-terminal"
set-option -g mouse-select-pane off
set-option -g status-keys vi
set-option -g bell-action any
set-option -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P #W #T' # window number,program name,active (or not)
set-option -g visual-bell off

# move x clipboard into tmux paste buffer
bind C-p run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"
# move tmux copy buffer into x clipboard
bind C-y run "tmux show-buffer | xclip -i"

setw -g mode-keys vi
setw -g mode-mouse off
setw -g monitor-activity on

bind e previous-window
bind f next-window
set -g terminal-overrides 'xterm*:XT:smcup@:rmcup@'
set-option -g status-utf8 on
set-option -g status-justify left
set-option -g status-bg default
set-option -g status-fg white
set-option -g status-left-length 40

set-option -g pane-active-border-fg blue
set-option -g pane-active-border-bg black
set-option -g pane-border-fg white
set-option -g pane-border-bg black

set-option -g message-fg black
set-option -g message-bg blue

#setw -g mode-bg black

setw -g window-status-bg default
setw -g window-status-fg white
setw -g window-status-current-fg blue
setw -g window-status-current-bg default

set-window-option -g window-status-current-format '#[bg=default,fg=blue,bold]#I#[bg=default,fg=blue] #[fg=blue]#W#[fg=dim]#F'
set-window-option -g window-status-format '#[bg=default,fg=white,bold]#I#[bg=default] #[fg=white]#W#[fg=dim]#F'
set -g status-left '#[fg=green]#S#[fg=blue] #[default]'
setw -g window-status-activity-bg colour2
set -g status-right '#[fg=blue, bold]%d %B #[fg=white]%H:%M#[default]'

set -g history-limit 4096

#Clipboard copy
bind C-c run "tmux show-buffer | xclip -i -selection clipboard"
bind C-v run "tmux set-buffer -- \"$(xclip -o selection clipboard)\"; tmux paste-buffer"


bind r source-file ~/.tmux.conf

# $Id: vim-keys.conf,v 1.2 2010-09-18 09:36:15 nicm Exp $
#
# vim-keys.conf, v1.2 2010/09/12
#
# By Daniel Thau.  Public domain.
#
# This configuration file binds many vi- and vim-like bindings to the
# appropriate tmux key bindings.  Note that for many key bindings there is no
# tmux analogue.  This is intended for tmux 1.3, which handles pane selection
# differently from the previous versions

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 9
bind > resize-pane -R 9
bind - resize-pane -D 3
bind = resize-pane -U 3

# Disable break pane and replace it with zoom
unbind !

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# vi-style controls for copy mode
setw -g mode-keys vi

# 0 is too far from ` ;)
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
